[tool.poetry]
name = "app"
version = "0.1.0"
description = "FastAPI Microservice Template"
authors = ["Developers"]
readme = "README.md"

# Core dependencies
[tool.poetry.dependencies]
python = "~3.11"
fastapi = "0.109.0"
uvicorn = { extras = ["standard"], version = "0.23.0" }
pydantic = { extras = ["email"], version = "2.5.0" }
pydantic-settings = "2.1.0"
sqlalchemy = "2.0.0"
asyncpg = "0.29.0"
alembic = "1.11.0"
aiokafka = "0.7.2"
kafka-python = "2.0.2"
redis = { extras = ["hiredis"], version = "5.0.8" }
httpx = "0.27.0"
loguru = "0.7.0"
sentry-sdk = { extras = ["fastapi"], version = "2.12.0" }
prometheus-client = "0.17.0"
opentelemetry-api = "1.21.0"
opentelemetry-sdk = "1.21.0"
opentelemetry-instrumentation-fastapi = "0.42b0"
opentelemetry-instrumentation-httpx = "0.42b0"
opentelemetry-instrumentation-sqlalchemy = "0.42b0"
opentelemetry-instrumentation-logging = "0.42b0"
opentelemetry-semantic-conventions = "0.42b0"
opentelemetry-exporter-otlp = "1.21.0"
python-jose = { extras = ["cryptography"], version = "3.3.0" }
passlib = { extras = ["bcrypt"], version = "1.7.4" }

# Dev dependencies
types-redis = "^4.6.0.20241004"
types-passlib = "^1.7.7.20250516"
python-multipart = "^0.0.20"
[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.23.8"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
factory-boy = "^3.3.3"
async-timeout = "^4.0.0"
coverage = "^7.8.0"
pytest-xdist = "^3.6.0"

# Lint dependencies
pre-commit = "^4.2.0"
[tool.poetry.group.lint.dependencies]
black = "^24.8.0"
isort = "^5.13.2"
flake8 = "^7.1.1"
mypy = "^1.11.1"
# sqlalchemy-stubs removed as it conflicts with SQLAlchemy 2.0 mypy plugin

# Tools config
[tool.isort]
line_length = 119
profile = "black"
skip = [".venv", ".git", ".hg", ".mypy_cache", ".tox", "venv", "env"]

[tool.black]
line-length = 119
target-version = ["py311"]
exclude = '''
/(
    \.venv
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.nox
  | \.eggs
  | \.env
  | venv
  | env
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
filterwarnings = [
    "ignore::DeprecationWarning:sqlalchemy.*:",
]

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "kafka.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiokafka.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "alembic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "alembic.op"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "redis.asyncio"
ignore_missing_imports = true

[tool.coverage.run]
source = ["app"]
omit = ["tests/*", "alembic/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
